{"version":3,"sources":["utils/gmail-client.js","config.js","utils/helpers.js","core/ticket-core.js","components/Ticket.js","utils/loading-context.js","components/TicketList.js","components/ProgressBar.js","components/App.js","serviceWorker.js","index.js"],"names":["gmailClient","config","DISCOVERY_DOCS","GmailClient","_this","this","Object","classCallCheck","initClient","asyncToGenerator","regenerator_default","a","mark","_callee","isInitiallyAuthorized","wrap","_context","prev","next","gapi","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","isSignedIn","listen","updateAuthStatus","get","stop","authorized","callAuthStatusListeners","_","authStatusListeners","_ref2","callback","signIn","signOut","addAuthStatusListener","listener","id","push","removeAuthStatusListener","isAuthorized","assertAuthorized","Error","findMessagesByQuery","_ref3","_callee2","query","_ref4","messages","_context2","gmail","users","list","userId","q","sent","result","abrupt","_x","apply","arguments","getMessageDetails","_ref5","_callee3","messageId","_ref6","message","_context3","parseMessage","_x2","getAttachment","_ref7","_callee4","attachmentId","_ref8","attachment","_context4","attachments","_x3","_x4","load","withGmailClient","WrappedComponent","_React$Component","WithGmailWrapper","props","_this2","possibleConstructorReturn","getPrototypeOf","call","state","setState","inherits","createClass","key","value","react_default","createElement","React","Component","getTextBetween","full","start","end","splitStartIndex","length","undefined","split","timeAndDateStringsToMoment","timeString","dateString","combinedString","concat","moment","DEBUG_MODE","URLSearchParams","window","location","search","console","warn","TicketRelevancy","NON_RELEVANT","CURRENT","UPCOMING","ResultType","createYieldableResult","resultType","TicketFinder","wrapAsyncGenerator","messageIds","nonRelevantSubsequentTicketCount","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","ticket","ticketRelevancy","awaitAsyncGenerator","log","Symbol","iterator","done","messageHtmlToTicketObject","textHtml","getTicketRelevancy","tripStartDate","tripEndDate","inline","objectSpread","relevancy","qrCodeDataURI","attachmentToDataURI","data","t0","t1","return","finish","now","isAfter","isBefore","attachmentData","base64Image","base64url","toBase64","messageHtml","from","time","parseFrom","to","parseTo","dateRaw","train","wagon","seat","ticketFor","tripStartLocation","tripEndLocation","getTime","date","format","context","Ticket","_this$props","onClick","Pane","display","flexDirection","elevation","padding","margin","borderBottom","relevancyToColor","flex","alignItems","justifyContent","Text","fontWeight","size","src","alt","width","height","Icon","icon","color","getLoadingContext","createContext","LoadingContextProvider","_getPrototypeOf2","_len","args","Array","_key","loading","progress","setLoading","setProgress","LoadingContext","Provider","children","EXPECTED_RESULT_COUNT","TicketList","ticketFinder","error","tickets","errorCount","overallResultCount","findRelevantTickets","toConsumableArray","resultCount","setTimeout","marginX","marginTop","map","Ticket_Ticket","assign","contextType","ProgressBar","_this$context","progressPercent","toFixed","containerClasses","classNames","visible","className","style","background","Heading","Button","intent","appearance","src_components_ProgressBar","components_TicketList","align","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","loading_context_LoadingContextProvider","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","e","prompt"],"mappings":"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","file":"static/js/main.e28d949b.chunk.js","sourcesContent":["/* global gapi */\nimport React from 'react';\nimport * as _ from 'lodash';\nimport * as parseMessage from 'gmail-api-parse-message';\n\nimport config from '../config';\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = 'https://www.googleapis.com/auth/gmail.readonly';\n\nlet gmailClient;\n\n// makes sure that GmailClient stays as a sigleton\nexport function getGmailClient() {\n  if (!gmailClient) {\n    gmailClient = new GmailClient();\n  }\n\n  return gmailClient;\n}\n\nclass GmailClient {\n  constructor() {\n    this.authStatusListeners = [];\n    this.authorized = false;\n\n    gapi.load('client:auth2', this.initClient);\n  }\n\n  initClient = async () => {\n    await gapi.client.init({\n      apiKey: config.GOOGLE_API_KEY,\n      clientId: config.GOOGLE_CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES,\n    });\n\n    gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateAuthStatus);\n  \n    const isInitiallyAuthorized = gapi.auth2.getAuthInstance().isSignedIn.get();\n    this.updateAuthStatus(isInitiallyAuthorized);\n  }\n\n  updateAuthStatus = (authorized) => {\n    this.authorized = authorized;\n\n    this.callAuthStatusListeners(authorized);\n  }\n\n  callAuthStatusListeners = (authorized) => {\n    _.forEach(this.authStatusListeners, ({ callback }) => callback(authorized));\n  }\n\n  signIn = () => {\n    gapi.auth2.getAuthInstance().signIn();\n  }\n\n  signOut = () => {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n\n  addAuthStatusListener = (callback) => {\n    const listener = {\n      id: _.uniqueId(),\n      callback,\n    };\n\n    this.authStatusListeners.push(listener);\n\n    return listener.id;\n  }\n\n  removeAuthStatusListener = (id) => {\n    this.authStatusListeners = _.reject(this.authStatusListeners, { id });\n  }\n\n  isAuthorized = () => {\n    return this.authorized;\n  }\n\n  assertAuthorized = () => {\n    if (!this.isAuthorized()) {\n      throw new Error('Google API not authenticated');\n    }\n  }\n\n  findMessagesByQuery = async (query) => {\n    this.assertAuthorized();\n\n    const { result: { messages } } = await gapi.client.gmail.users.messages.list({\n      'userId': 'me',\n      'q': query,\n    });\n\n    return messages;\n  }\n\n  getMessageDetails = async (messageId) => {\n    const { result: message } = await gapi.client.gmail.users.messages.get({\n      'userId': 'me',\n      'id': messageId,\n    });\n  \n    return parseMessage(message);\n  }\n\n  getAttachment = async (messageId, attachmentId) => {\n    const { result: attachment } = await gapi.client.gmail.users.messages.attachments.get({\n      'userId': 'me',\n      'id': attachmentId,\n      'messageId': messageId,\n    });\n\n    return attachment;\n  }\n}\n\nexport function withGmailClient(WrappedComponent) {\n  return class WithGmailWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.gmailClient = getGmailClient();\n\n      this.state = {\n        authorized: this.gmailClient.isAuthorized(),\n      };\n\n      this.gmailClient.addAuthStatusListener((authorized) => {\n        this.setState({\n          authorized,\n        });\n      });\n    }\n\n    render() {\n      return (\n        <WrappedComponent client={this.gmailClient}\n                          authorized={this.state.authorized}\n        />\n      );\n    }\n  }\n}\n","export default {\n  GOOGLE_CLIENT_ID: '917849568600-tsfpk9a7ime5mp05mbi2m50pa6dmdvdv.apps.googleusercontent.com',\n  GOOGLE_API_KEY: 'AIzaSyC8wpPEEB_lJHis-t6yGkwespbyriKEUas',\n};\n","import * as moment from 'moment';\n\nexport function getTextBetween(full, start, end, splitStartIndex = 1) {\n  return full.split(start)[splitStartIndex].split(end)[0];\n}\n\nexport function timeAndDateStringsToMoment(timeString, dateString) {\n  const dateFormat = 'DD.MM.YYYY HH:mm'\n  const combinedString = `${dateString} ${timeString}`;\n  return moment(combinedString, dateFormat);\n}\n","import * as _ from 'lodash';\nimport {\n  getTextBetween,\n  timeAndDateStringsToMoment,\n} from '../utils/helpers';\n\nimport * as moment from 'moment';\nimport base64url from 'base64url';\n\n// how many subsequent non-relevant tickets will interrupt the ticket search\nconst NON_RELEVANT_TOLERANCE = 2;\n\nconst params = new URLSearchParams(window.location.search);\nconst DEBUG_MODE = params.get('debug') === 'true';\n\nif (DEBUG_MODE) {\n  console.warn('TicketCore is in debug mode!');\n}\n\nexport const TicketRelevancy = {\n  NON_RELEVANT: 'NON_RELEVANT',\n  CURRENT: 'CURRENT',\n  UPCOMING: 'UPCOMING',\n};\n\nexport const ResultType = {\n  TICKET: 'TICKET',\n  ERROR: 'ERROR',\n  NON_RELEVANT: 'NON_RELEVANT',\n}\n\nfunction createYieldableResult(resultType, result) {\n  return {\n    resultType,\n    result,\n  };\n}\n\nexport class TicketFinder {\n  constructor(gmailClient) {\n    this.gmailClient = gmailClient;\n  }\n\n  async *findRelevantTickets() {\n    const { gmailClient } = this;\n    const messages = await gmailClient.findMessagesByQuery('Matkalippu from:tickets@vr.fi');\n  \n    const messageIds = _.map(messages, 'id');\n  \n    console.log(messageIds);\n  \n    let nonRelevantSubsequentTicketCount = 0;\n    \n    for (const messageId of messageIds) {\n      try {\n        const message = await gmailClient.getMessageDetails(messageId);\n  \n        const ticket = messageHtmlToTicketObject(message.textHtml);\n        const ticketRelevancy = getTicketRelevancy(ticket.tripStartDate, ticket.tripEndDate);\n\n        // if ticket is non relevant, don't fetch more data and prepare to stop\n        if (ticketRelevancy === TicketRelevancy.NON_RELEVANT) {\n          yield createYieldableResult(ResultType.NON_RELEVANT);\n          console.log('Encountered non-relevant ticket');\n\n          if (nonRelevantSubsequentTicketCount === NON_RELEVANT_TOLERANCE) {\n            console.log('Stopping.');\n            // if previous ticket was also non relevant, assume there will be no more relevant tickets\n            break;\n          }\n\n          console.log('Stopping if next ticket is also non-relevant');\n          nonRelevantSubsequentTicketCount++;\n          continue;\n        }\n\n        const attachmentId = _.first(message.inline).attachmentId;\n        const attachment = await gmailClient.getAttachment(messageId, attachmentId);\n\n        console.log(`Yielding ${ticketRelevancy} ticket`);\n  \n        const result = {\n          ...ticket,\n          id: messageId,\n          relevancy: ticketRelevancy,\n          qrCodeDataURI: attachmentToDataURI(attachment.data),\n        };\n\n        nonRelevantSubsequentTicketCount = 0;\n\n        yield createYieldableResult(ResultType.TICKET, result);\n      } catch (err) {\n        yield createYieldableResult(ResultType.ERROR, err);\n      }\n    }\n  }\n}\n\nfunction getTicketRelevancy(tripStartDate, tripEndDate) {\n  const now = DEBUG_MODE ? moment('2018-10-24 08:30') : moment();\n\n  if (now.isAfter(tripEndDate)) {\n    return TicketRelevancy.NON_RELEVANT;\n  }\n\n  if (now.isBefore(tripStartDate)) {\n    return TicketRelevancy.UPCOMING;\n  }\n\n  return TicketRelevancy.CURRENT;\n}\n\nfunction attachmentToDataURI(attachmentData) {\n  // Gmail API gives us a Base64_urlencoded image\n  // We need to convert it to normal Base64 for data URI\n  const base64Image = base64url.toBase64(attachmentData);\n  return `data:image/png;base64,${base64Image}`;\n}\n\nfunction messageHtmlToTicketObject(messageHtml) {\n  const from = parseFrom(messageHtml);\n  const to = parseTo(messageHtml);\n  const dateRaw = getTextBetween(messageHtml,\n      '<span style=\"color:#077f00;\">', '</span>', 2);\n  \n  const tripStartDate = timeAndDateStringsToMoment(from.time, dateRaw);\n  const tripEndDate = timeAndDateStringsToMoment(to.time, dateRaw);\n  \n  const train = getTextBetween(messageHtml,\n      '<span style=\"font-size:14px;line-height:1.5;\">', ',');\n  const wagon = getTextBetween(messageHtml,\n      '<b style=\"font-size:24px;line-height:1.5;color:#077f00;\">', ' </b>');\n  const seat = getTextBetween(messageHtml,\n      '<b style=\"font-size:24px;line-height:1.5;color:#077f00;\">', ' </b>', 2);\n  const ticketFor = getTextBetween(messageHtml,\n      '<span style=\"font-size:16px;\">', '</span>', 2);\n\n  return {\n    tripStartLocation: from.location,\n    tripEndLocation: to.location,\n    tripStartDate,\n    tripEndDate,\n    train,\n    wagon,\n    seat,\n    ticketFor,\n  };\n}\n\nfunction parseFrom(messageHtml) {\n  const full = getTextBetween(\n    messageHtml,\n    '<td width=\"90%\" valign=\"top\" style=\"color:#4F5D5D;line-height:1.2;\" rowspan=\"1\" colspan=\"1\">',\n    '</td>',\n  );\n  \n  const time = getTextBetween(full, '<span style=\"font-size:16px;\">', ' </span>');\n  const location = getTextBetween(full, '<b style=\"font-size:16px;\">', ' →</b>');\n\n  return {\n    time,\n    location,\n  };\n}\n\nfunction parseTo(messageHtml) {\n  const full = getTextBetween(\n    messageHtml,\n    '<td width=\"90%\" style=\"color:#4F5D5D;padding-top:5px;\" rowspan=\"1\" colspan=\"1\">',\n    '</td>',\n  );\n  \n  const time = getTextBetween(full, '<span style=\"font-size:16px;line-height:1.2;\">', ' </span>');\n  const location = getTextBetween(full, '<b style=\"font-size:16px;line-height:1.2;\">', '</b>');\n\n  return {\n    time,\n    location,\n  };\n}\n","import React, { Component } from 'react';\nimport { Pane, Text, Icon } from 'evergreen-ui';\nimport * as moment from 'moment';\nimport { TicketRelevancy } from '../core/ticket-core';\n\nfunction getTime(date) {\n  return moment(date).format('HH:mm');\n}\n\nfunction getDate(date) {\n  return moment(date).format('DD.MM.YYYY');\n}\n\nfunction relevancyToColor(relevancy) {\n  switch (relevancy) {\n    case TicketRelevancy.CURRENT:\n      return '#47B881';\n    case TicketRelevancy.UPCOMING:\n      return '#D4EEE2';\n    default:\n      return '#66788A';\n  }\n}\n\nexport default class Ticket extends Component {\n  render() {\n    const {\n      onClick,\n      tripStartDate,\n      tripEndDate,\n      tripStartLocation,\n      tripEndLocation,\n      train,\n      wagon,\n      seat,\n      relevancy,\n      qrCodeDataURI,\n    } = this.props;\n\n    return (\n      <Pane\n        onClick={onClick}\n        display=\"flex\"\n        flexDirection=\"row\"\n        elevation={1}\n        padding={8}\n        margin={12}\n        borderBottom={`3px solid ${relevancyToColor(relevancy)}`}\n      >\n        <Pane\n          display=\"flex\"\n          flex={1}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\"\n        >\n          <Text fontWeight=\"bold\">{tripStartLocation}</Text>\n          <Text size={500}>{getTime(tripStartDate)}</Text>\n        </Pane>\n\n        <Pane\n          display=\"flex\"\n          flex={1}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\"\n        >\n          <Text margin={4}>{getDate(tripStartDate)}</Text>\n          {\n            relevancy === TicketRelevancy.CURRENT\n              ? <img\n                  src={qrCodeDataURI}\n                  alt=\"QR Code\"\n                  width={133}\n                  height={133}\n                />\n              : <Icon margin={4} icon=\"train\" color='#00783E'/>\n          }\n          <Text margin={4}>{train} / {wagon} / {seat}</Text>\n        </Pane>\n\n        <Pane\n          display=\"flex\"\n          flex={1}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\"\n        >\n          <Text fontWeight=\"bold\">{tripEndLocation}</Text>\n          <Text size={500}>{getTime(tripEndDate)}</Text>\n        </Pane>\n      </Pane>\n    );\n  }\n}\n","import React from 'react';\nlet context;\n\nexport function getLoadingContext() {\n  if (!context) {\n    context = React.createContext();\n  }\n\n  return context;\n}\n\nexport class LoadingContextProvider extends React.Component {\n  state = {\n    loading: false,\n    progress: 0.00,\n  }\n\n  setLoading = (loading) => {\n    this.setState({\n      loading,\n      progress: loading ? 0.00 : 1.00,\n    });\n  }\n\n  setProgress = (progress) => {\n    this.setState({\n      progress,\n    });\n  }\n\n  render() {\n    const LoadingContext = getLoadingContext();\n\n    return (\n      <LoadingContext.Provider value={{\n        ...this.state,\n        setLoading: this.setLoading,\n        setProgress: this.setProgress,\n      }}>\n        {this.props.children}\n      </LoadingContext.Provider>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Pane, Spinner } from 'evergreen-ui';\nimport Ticket from './Ticket';\nimport { TicketFinder, ResultType } from '../core/ticket-core';\nimport { withGmailClient } from '../utils/gmail-client';\nimport { getLoadingContext } from '../utils/loading-context';\n\n// Expected amount of yielded results\nconst EXPECTED_RESULT_COUNT = 2;\n\nconst LoadingContext = getLoadingContext();\n\n// calculates a progress number for the progress bar\n// from 0 to 1, based on count of loaded tickets\nfunction calculateProgress(resultCount) {\n  let currentExpectedResultCount = EXPECTED_RESULT_COUNT > resultCount\n    ? EXPECTED_RESULT_COUNT\n    : resultCount + 1;\n\n  return resultCount / currentExpectedResultCount;\n}\n\nclass TicketList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ticketFinder = new TicketFinder(props.client);\n\n    this.state = {\n      error: null,\n      tickets: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { setLoading, setProgress } = this.context;\n\n    setLoading(true);\n\n    let errorCount = 0;\n    let overallResultCount = 0;\n\n    for await (const { resultType, result} of this.ticketFinder.findRelevantTickets()) {\n      \n      if (resultType === ResultType.TICKET) {\n        this.setState({\n          tickets: [ ...this.state.tickets, result],\n        });\n      }\n\n      if (resultType === ResultType.ERROR) {\n        errorCount++;\n      }\n\n      overallResultCount++;\n      const progress = calculateProgress(overallResultCount);\n      setProgress(progress);\n    }\n\n    setProgress(1);\n\n    setTimeout(() => setLoading(false), 500);\n\n    console.log(`Finished fetching relevant tickets with ${errorCount} error(s).`);\n  }\n\n  render() {\n    const { tickets } = this.state;\n\n    return (\n      <Pane marginX={8} marginTop={2}>\n        {\n          tickets.map(ticket => (\n            <Ticket\n              key={ticket.id}\n              {...ticket}\n            />\n          ))\n        }\n      </Pane>\n    );\n  }\n}\n\nTicketList.contextType = LoadingContext;\n\nexport default withGmailClient(TicketList);\n","import React from 'react';\nimport './ProgressBar.css';\nimport classNames from 'classnames';\n\nimport { getLoadingContext } from '../utils/loading-context';\n\nconst LoadingContext = getLoadingContext();\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    const { loading, progress } = this.context;\n    const progressPercent = (progress * 100).toFixed(0);\n\n    const containerClasses = classNames('progress-bar', {\n      'visible': loading,\n    });\n\n    return (\n      <div className={containerClasses}>\n        <div className=\"fill\" style={{width: `${progressPercent}%`}} />\n      </div>\n    );\n  }\n}\n\nProgressBar.contextType = LoadingContext;\n\nexport default ProgressBar;","import React from 'react';\nimport {\n  Heading,\n  Pane,\n  Button,\n  Icon,\n  Text,\n} from 'evergreen-ui';\n\nimport { withGmailClient } from '../utils/gmail-client';\nimport TicketList from './TicketList';\nimport ProgressBar from './ProgressBar';\n\nconst App = (props) => (\n  <Pane>\n    <Pane display=\"flex\" padding={16} background=\"greenTint\">\n      <Pane flex={1} alignItems=\"center\" display=\"flex\">\n        <Heading size={600}>Tickets</Heading>\n      </Pane>\n    \n      {\n        props.authorized ?\n          <Button onClick={props.client.signOut}>Sign out</Button>\n          :\n          <Button intent=\"success\" appearance=\"primary\" onClick={props.client.signIn}>\n            Sign in\n          </Button>\n      }\n\n    </Pane>\n\n    <ProgressBar />\n\n    {\n        props.authorized\n        ? <TicketList />\n        : <Pane\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            height=\"calc(100vh - 64px)\"\n          >\n            <Icon icon=\"train\" size={60} color=\"success\"/>\n            <Text color=\"muted\" marginTop={16} marginX={30} align=\"center\">\n              Welcome to Ticket Finder!\n            </Text>\n            <Text color=\"muted\" marginTop={16} marginX={30} align=\"center\">\n              Sign in with your Google account to find train tickets from your Gmail Inbox.\n            </Text>\n          </Pane>\n    }\n  </Pane>\n)\n\nexport default withGmailClient(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { LoadingContextProvider } from './utils/loading-context';\n\nReactDOM.render(\n  <LoadingContextProvider>\n    <App />\n  </LoadingContextProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  e.prompt();\n});\n"],"sourceRoot":""}